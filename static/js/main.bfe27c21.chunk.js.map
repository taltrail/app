{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","className","Navbar","Brand","href","alt","src","logo","width","height","Toggle","Collapse","Form","inline","FormControl","type","placeholder","Button","variant","Nav","Link","activeKey","onSelect","selectedKey","alert","Item","eventKey","icon","faHome","faColumns","faStar","faFire","faYoutube","faHourglassEnd","faClock","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wFAAAA,EAAOC,QAAU,IAA0B,kC,0PCuK5BC,MAhIf,WACE,OACE,yBAAKC,UAAU,OACb,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAOC,MAAR,CAAcC,KAAK,SACjB,yBACEC,IAAI,GACJC,IAAKC,IACLC,MAAM,KACNC,OAAO,KACPR,UAAU,6BACT,KAEL,kBAACC,EAAA,EAAOQ,OAAR,MACA,kBAACR,EAAA,EAAOS,SAAR,CAAiBV,UAAU,uBACzB,kBAACW,EAAA,EAAD,CAAMC,QAAM,GACV,kBAACC,EAAA,EAAD,CAAaC,KAAK,OAAOC,YAAY,WACrC,kBAACC,EAAA,EAAD,CAAQC,QAAQ,mBAAhB,YAGJ,kBAAChB,EAAA,EAAOS,SAAR,CAAiBV,UAAU,uBACzB,kBAACkB,EAAA,EAAIC,KAAL,CAAUhB,KAAK,WAAf,qBASJ,yBAAKH,UAAU,WACb,kBAACkB,EAAA,EAAD,CACEE,UAAU,QACVC,SAAU,SAACC,GAAD,OAAiBC,MAAM,YAAD,OAAaD,MAE7C,kBAACJ,EAAA,EAAIM,KAAL,KACE,kBAACN,EAAA,EAAIC,KAAL,CAAUhB,KAAK,SAAf,YAEF,kBAACe,EAAA,EAAIM,KAAL,KACE,kBAACN,EAAA,EAAIC,KAAL,CAAUM,SAAS,UAChB,IACD,6BACE,kBAAC,IAAD,CAAiBC,KAAMC,OAClB,IAJT,OAKO,MAGT,kBAACT,EAAA,EAAIM,KAAL,KACE,kBAACN,EAAA,EAAIC,KAAL,CAAUM,SAAS,UAChB,IACD,6BACE,kBAAC,IAAD,CAAiBC,KAAME,OAH3B,aAKa,MAGf,kBAACV,EAAA,EAAIM,KAAL,KACE,kBAACN,EAAA,EAAIC,KAAL,CAAUhB,KAAK,SACZ,IACD,6BACE,kBAAC,IAAD,CAAiBuB,KAAMG,OAH3B,SAKS,MAGX,kBAACX,EAAA,EAAIM,KAAL,KACE,kBAACN,EAAA,EAAIC,KAAL,CAAUhB,KAAK,SACZ,IACD,6BACE,kBAAC,IAAD,CAAiBuB,KAAMI,OAClB,IAJT,WAKW,MAGb,kBAACZ,EAAA,EAAIM,KAAL,KACE,kBAACN,EAAA,EAAIC,KAAL,CAAUhB,KAAK,SACZ,IACD,6BACE,kBAAC,IAAD,CAAiBuB,KAAMK,OAH3B,WAKW,MAGb,kBAACb,EAAA,EAAIM,KAAL,KACE,kBAACN,EAAA,EAAIC,KAAL,CAAUhB,KAAK,SACZ,IACD,6BACE,kBAAC,IAAD,CAAiBuB,KAAMM,OAH3B,UAKU,MAGZ,kBAACd,EAAA,EAAIM,KAAL,KACE,kBAACN,EAAA,EAAIC,KAAL,CAAUhB,KAAK,SACZ,IACD,6BACE,kBAAC,IAAD,CAAiBuB,KAAMO,OAH3B,cAKc,UC7HNC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.bfe27c21.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport {\n  faFacebook,\n  faLinkedin,\n  faGithub,\n  faInstagram,\n  faTwitter,\n  faYoutube,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport {\n  faHome,\n  faSearch,\n  faPaintBrush,\n  faTools,\n  faMusic,\n  faMedkit,\n  faBlog,\n  faVolleyballBall,\n  faCamera,\n  faCar,\n  faDatabase,\n  faArrowAltCircleRight,\n  faFire,\n  faStar,\n  faHourglassEnd,\n  faClock,\n  faColumns,\n  faSignInAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar>\n        <Navbar.Brand href=\"#home\">\n          <img\n            alt=\"\"\n            src={logo}\n            width=\"75\"\n            height=\"50\"\n            className=\"d-inline-block align-top\"\n          />{\" \"}\n        </Navbar.Brand>\n        <Navbar.Toggle />\n        <Navbar.Collapse className=\"justify-content-end\">\n          <Form inline>\n            <FormControl type=\"text\" placeholder=\"Search\" />\n            <Button variant=\"outline-primary\">Search</Button>\n          </Form>\n        </Navbar.Collapse>\n        <Navbar.Collapse className=\"justify-content-end\">\n          <Nav.Link href=\"/signup\">Sign-up / Login</Nav.Link>\n        </Navbar.Collapse>\n        {/* <Navbar.Collapse className=\"justify-content-end\">\n          <Nav.Link href=\"/home\">\n            Go to Home\n          </Nav.Link>\n        </Navbar.Collapse> */}\n      </Navbar>\n      {/* <hr></hr> */}\n      <div className=\"toolbar\">\n        <Nav\n          activeKey=\"/home\"\n          onSelect={(selectedKey) => alert(`selected ${selectedKey}`)}\n        >\n          <Nav.Item>\n            <Nav.Link href=\"/home\">Go to: </Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link eventKey=\"link-1\">\n              {\" \"}\n              <div>\n                <FontAwesomeIcon icon={faHome} />\n              </div>{\" \"}\n              Home{\" \"}\n            </Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link eventKey=\"link-2\">\n              {\" \"}\n              <div>\n                <FontAwesomeIcon icon={faColumns} />\n              </div>\n              Categories{\" \"}\n            </Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link href=\"/home\">\n              {\" \"}\n              <div>\n                <FontAwesomeIcon icon={faStar} />\n              </div>\n              Trails{\" \"}\n            </Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link href=\"/home\">\n              {\" \"}\n              <div>\n                <FontAwesomeIcon icon={faFire} />\n              </div>{\" \"}\n              Trending{\" \"}\n            </Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link href=\"/home\">\n              {\" \"}\n              <div>\n                <FontAwesomeIcon icon={faYoutube} />\n              </div>\n              Playlist{\" \"}\n            </Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link href=\"/home\">\n              {\" \"}\n              <div>\n                <FontAwesomeIcon icon={faHourglassEnd} />\n              </div>\n              History{\" \"}\n            </Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link href=\"/home\">\n              {\" \"}\n              <div>\n                <FontAwesomeIcon icon={faClock} />\n              </div>\n              Watch later{\" \"}\n            </Nav.Link>\n          </Nav.Item>\n        </Nav>\n      </div>\n    </div>\n  );\n}\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React today!\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}